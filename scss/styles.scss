@import "setup";

// === Ideal html CSS properties ===
// (use these on all projects if possible)
html,
body {
  // allows width and height definitions to account
  // for an element's border and padding
  // https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing
  box-sizing: border-box;

  // changes the root font size from 16 to 10px
  font-size: 62.5%;

  // removes pre-defined margin and padding
  margin: 0;
  padding: 0;
}

// === Comparison between PX and REM ===
// rem is dependent of the root font size set by the user's browser
// and the html element. So, rem is preferred for compatibility and consistency
// you can test this by changing the font size of your browser (not zoom)
.px-size {
  font-size: 50px;
}
.rem-size {
  font-size: 5rem;
}

// consistent box style for positioning demo
.box {
  font-size: 2rem;
  height: 20rem;
  width: 20rem;
  border: 0.1rem solid black;
  color: white;
}

// === positioning ===
// You can move HTML elements using the combination of top, bottom, left, right,
// (position) along with the right position setting. Each setting has an unique property.

// `position: absolute` - takes the element away from the normal flow of HTML elements
// and lets you position relative to its parent element (this case, the `body`)
.absolute {
  background-color: red;
  position: absolute;
  right: 15%;
  top: 30%;
}

// `position: relative` - the element stays in the normal HTML flow, letting you position
// relative to itself *before* position changes (left, top, bottom, and right are reversed)
.relative {
  background-color: blue;
  position: relative;
  left: 5%;
  top: 5%;
}

// `position: sticky` - allows the element to "stick" (switch from relative -> sticky)
//  after the user scrolls to its defined position relative to the parent
//  (requires top, left, bottom, or right to be defined)
.sticky {
  background-color: green;
  position: sticky;
  top: 0;
}

// `position: fixed` - locks the element to a defined position relative to the viewport (screen)
//  (requires top, left, bottom, or right to be defined)
.fixed {
  background-color: purple;
  position: fixed;
  bottom: 0;
  right: 0;
}
